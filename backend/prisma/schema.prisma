generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Show {
  id           BigInt      @id @default(autoincrement())
  title        String
  genre        String?
  description  String?
  producer     String?
  release_year Int?
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  episodes     Episode[]
  ratings      Rating[]
  watch        Watchlist[]
}

model Episode {
  id             BigInt    @id @default(autoincrement())
  show_id        BigInt
  season_number  Int       @default(1)
  episode_number Int
  name           String
  air_date       DateTime?
  created_at     DateTime  @default(now())
  show           Show      @relation(fields: [show_id], references: [id], onDelete: Cascade)

  @@unique([show_id, season_number, episode_number])
}

model Rating {
  id         BigInt   @id @default(autoincrement())
  user_id    String
  show_id    BigInt
  score      Int
  review     String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  show       Show     @relation(fields: [show_id], references: [id], onDelete: Cascade)

  @@unique([user_id, show_id])
}

model Watchlist {
  id         BigInt      @id @default(autoincrement())
  user_id    String
  show_id    BigInt
  status     WatchStatus @default(planned)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  show       Show        @relation(fields: [show_id], references: [id], onDelete: Cascade)

  @@unique([user_id, show_id])
}

enum WatchStatus {
  watching
  completed
  planned
  dropped
  removed
}
